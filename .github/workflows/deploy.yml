name: Deploy to Production

on:
  push:
      tags:
        - '*'

env:
    AWS_REGION: ${{ vars.AWS_REGION }}

permissions:
    id-token: write # required for requesting the AWS token
    contents: read  # required for actions/checkout

jobs:
    build_test:
        name: Build & Test
        runs-on: ubuntu-latest
        environment: production

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                node-version: 18
                cache: 'npm'
            - name: install
              working-directory: ./lambda
              run: npm ci
            - name: clean
              working-directory: ./lambda
              run: npm run clean
            - name: build
              working-directory: ./lambda
              run: npm run build
            - name: test
              working-directory: ./lambda
              run: npm test

            - name: zip build files
              if: ${{ ! contains(github.ref_name, '-rc') }}
              working-directory: ./lambda
              run: zip -r9 ./irr.zip ./dist/* ./node_modules/*
            
            - name: upload deployment artifacts
              if: ${{ ! contains(github.ref_name, '-rc') }}
              uses: actions/upload-artifact@v4
              with:
                name: node-app
                path: ./lambda/irr.zip

    deploy:
        if: ${{ ! contains(github.ref_name, '-rc') }}
        name: Deploy
        runs-on: ubuntu-latest
        needs: build_test
        environment: production

        steps:
            - name: download build artifacts
              uses: actions/download-artifact@v4
              with:
                name: node-app
            
            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ${{ env.AWS_REGION }}
                role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            
            - name: aws deploy
              run: |
                aws lambda update-function-code --function-name ask-skill-illinois-radio-reader --zip-file fileb://irr.zip